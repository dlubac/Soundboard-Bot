import asyncio
import discord
import os
from glob import glob

from discord.ext import commands

from soundboardbot.models.bot_role import BotRole
from soundboardbot.utils import sb_utils

RESERVED_SUBCOMMANDS = ['clips']

if not discord.opus.is_loaded():
    discord.opus.load_opus('libopus.so.1')


class <className>:
    def __init__(self, bot):
        self.bot = bot

    @commands.group(name='<commandName>')
    async def play_audio(self, ctx, arg):
        """
        Play an audio clip
        :param ctx: message context
        :param arg: subcommand
        :return:
        """

        if arg in RESERVED_SUBCOMMANDS:
            await self.reserved_commands(self, ctx, arg)
        else:
            await ctx.message.delete()
            user_registered = sb_utils.has_role(member=ctx.message.author, role_name=BotRole.USER.value)
            user_banned = sb_utils.has_role(member=ctx.message.author, role_name=BotRole.BANNED.value)

            if user_registered and not user_banned:
                voice = await ctx.author.voice.channel.connect()
                file = f'boards/<commandName>/{arg}.mp3'
                voice.play(discord.FFmpegPCMAudio(file), after=lambda e: print('done', e))

                while voice.is_playing():
                    await asyncio.sleep(1)

                await voice.disconnect()
            elif not user_registered:
                await ctx.message.author.send('You are not registered to use the bot. Type !register')
            else:
                await ctx.message.author.send('You are banned from using the bot. Yikes.')


    def disconnect_voice(self, voice, bot):
        coroutine = voice.disconnect()
        fut = asyncio.run_coroutine_threadsafe(coroutine, bot)

        try:
            fut.result()
        except asyncio.CancelledError as e:
            print(e)

    @staticmethod
    async def reserved_commands(self, ctx, arg):
        """
        Handle reserved commands
        :param ctx: message context
        :param arg: subcommand
        :return:
        """

        if arg == 'clips':
            cwd = os.getcwd()
            os.chdir('boards/<commandName>')

            clips_map = map(lambda board: board.replace('.mp3', ''), glob('*.mp3'))
            clips = 'Available clips for <commandName>:\n' + '\n'.join(list(clips_map))

            os.chdir(cwd)

            await ctx.message.author.send(clips)

        await ctx.message.delete()


def setup(bot):
    bot.add_cog(<className>(bot))
